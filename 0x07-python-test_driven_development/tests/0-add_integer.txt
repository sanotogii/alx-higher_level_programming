# add_integer.txt

=================================================================
Explain how to use module add_integer.py's add_integer() function
=================================================================

add_integer(a, b=98)
=====================
It takes two integers, one compulsory: ``a`` and one optional: ``b``
``a`` and ``b`` must be of type 'int' or 'float', otherwise a TypeError is raised
Returns the sum of ``a`` and ``b``

===============
Correct types
===============

Integer(or float) and Integer(or float)
========================================
::
        >>> add_integer = __import__('0-add_integer').add_integer
        >>> add_integer(1, 2)
        3
        >>> add_integer(100, -2)
        98
        >>> add_integer(2)
        100
        >>> add_integer(100.3, -2)
        98

==============
Wrong types:
==============

Integer and String
==========================
::
>>> add_integer(10, "String")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(":param a:", 5)
Traceback (most recent call last):
TypeError: a must be an integer

Other invalid type combination
===============================
>>> add_integer([1], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(100, {'s': 100})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(10.8, [{'one': 1}, 3, (2, 4, 'four'), [5]])
Traceback (most recent call last):
TypeError: b must be an integer

